#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	


	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TRASUA")]
	public partial class DB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPhieuThu(PhieuThu instance);
    partial void UpdatePhieuThu(PhieuThu instance);
    partial void DeletePhieuThu(PhieuThu instance);
    partial void InsertNhomDM(NhomDM instance);
    partial void UpdateNhomDM(NhomDM instance);
    partial void DeleteNhomDM(NhomDM instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertKhuVuc(KhuVuc instance);
    partial void UpdateKhuVuc(KhuVuc instance);
    partial void DeleteKhuVuc(KhuVuc instance);
    partial void InsertDanhMuc(DanhMuc instance);
    partial void UpdateDanhMuc(DanhMuc instance);
    partial void DeleteDanhMuc(DanhMuc instance);
    partial void InsertChiTietPT(ChiTietPT instance);
    partial void UpdateChiTietPT(ChiTietPT instance);
    partial void DeleteChiTietPT(ChiTietPT instance);
    #endregion
		
       public DataTable CreateTable<T>(IEnumerable<T> varList)

        {

            DataTable dataTable = new DataTable();



            // ---- Danh sách các Dựng Hàm public để tạo các cột cho bảng

            PropertyInfo[] tableColumns = null;



            // Với mỗi phần tử từ trong list

            foreach (T rec in varList)

            {

                // Sử dụng Reflection để lấy tên từng các cột

                if (tableColumns == null)

                {

                    tableColumns = ((Type)rec.GetType()).GetProperties();

                    foreach (PropertyInfo pi in tableColumns)

                    {

                        Type columnType = pi.PropertyType;

                        if ((columnType.IsGenericType) && (columnType.GetGenericTypeDefinition() == typeof(Nullable<>)))

                        {

                            columnType = columnType.GetGenericArguments()[0];

                        }

                        dataTable.Columns.Add(new DataColumn(pi.Name, columnType));

                    }

                }



                // ---- Chuyển dữ liệu thành các hàng

                DataRow dataRow = dataTable.NewRow();

                foreach (PropertyInfo pi in tableColumns)

                {

                    dataRow[pi.Name] = pi.GetValue(rec, null) == null ? DBNull.Value : pi.GetValue(rec, null);

                }

                dataTable.Rows.Add(dataRow);

            }

            return (dataTable);

        }

    
	   
		public DB() : 
				base(global::LinQ.Properties.Settings.Default.TRASUAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PhieuThu> PhieuThus
		{
			get
			{
				return this.GetTable<PhieuThu>();
			}
		}
		
		public System.Data.Linq.Table<NhomDM> NhomDMs
		{
			get
			{
				return this.GetTable<NhomDM>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<KhuVuc> KhuVucs
		{
			get
			{
				return this.GetTable<KhuVuc>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc> DanhMucs
		{
			get
			{
				return this.GetTable<DanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPT> ChiTietPTs
		{
			get
			{
				return this.GetTable<ChiTietPT>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuThu")]
	public partial class PhieuThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSo;
		
		private System.Nullable<int> _NguoiDung;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private System.Nullable<long> _TongTien;
		
		private System.Nullable<long> _TienNhan;
		
		private System.Nullable<int> _KhuVuc;
		
		private System.Nullable<bool> _ThanhToan;
		
		private EntitySet<ChiTietPT> _ChiTietPTs;
		
		private EntityRef<NguoiDung> _NguoiDung1;
		
		private EntityRef<KhuVuc> _KhuVuc1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoChanging(int value);
    partial void OnMaSoChanged();
    partial void OnNguoiDungChanging(System.Nullable<int> value);
    partial void OnNguoiDungChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    partial void OnTongTienChanging(System.Nullable<long> value);
    partial void OnTongTienChanged();
    partial void OnTienNhanChanging(System.Nullable<long> value);
    partial void OnTienNhanChanged();
    partial void OnKhuVucChanging(System.Nullable<int> value);
    partial void OnKhuVucChanged();
    partial void OnThanhToanChanging(System.Nullable<bool> value);
    partial void OnThanhToanChanged();
    #endregion
		
		public PhieuThu()
		{
			this._ChiTietPTs = new EntitySet<ChiTietPT>(new Action<ChiTietPT>(this.attach_ChiTietPTs), new Action<ChiTietPT>(this.detach_ChiTietPTs));
			this._NguoiDung1 = default(EntityRef<NguoiDung>);
			this._KhuVuc1 = default(EntityRef<KhuVuc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSo
		{
			get
			{
				return this._MaSo;
			}
			set
			{
				if ((this._MaSo != value))
				{
					this.OnMaSoChanging(value);
					this.SendPropertyChanging();
					this._MaSo = value;
					this.SendPropertyChanged("MaSo");
					this.OnMaSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiDung", DbType="Int")]
		public System.Nullable<int> NguoiDung
		{
			get
			{
				return this._NguoiDung;
			}
			set
			{
				if ((this._NguoiDung != value))
				{
					if (this._NguoiDung1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._NguoiDung = value;
					this.SendPropertyChanged("NguoiDung");
					this.OnNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="BigInt")]
		public System.Nullable<long> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienNhan", DbType="BigInt")]
		public System.Nullable<long> TienNhan
		{
			get
			{
				return this._TienNhan;
			}
			set
			{
				if ((this._TienNhan != value))
				{
					this.OnTienNhanChanging(value);
					this.SendPropertyChanging();
					this._TienNhan = value;
					this.SendPropertyChanged("TienNhan");
					this.OnTienNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KhuVuc", DbType="Int")]
		public System.Nullable<int> KhuVuc
		{
			get
			{
				return this._KhuVuc;
			}
			set
			{
				if ((this._KhuVuc != value))
				{
					if (this._KhuVuc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKhuVucChanging(value);
					this.SendPropertyChanging();
					this._KhuVuc = value;
					this.SendPropertyChanged("KhuVuc");
					this.OnKhuVucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhToan", DbType="Bit")]
		public System.Nullable<bool> ThanhToan
		{
			get
			{
				return this._ThanhToan;
			}
			set
			{
				if ((this._ThanhToan != value))
				{
					this.OnThanhToanChanging(value);
					this.SendPropertyChanging();
					this._ThanhToan = value;
					this.SendPropertyChanged("ThanhToan");
					this.OnThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuThu_ChiTietPT", Storage="_ChiTietPTs", ThisKey="MaSo", OtherKey="PhieuThu")]
		public EntitySet<ChiTietPT> ChiTietPTs
		{
			get
			{
				return this._ChiTietPTs;
			}
			set
			{
				this._ChiTietPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_PhieuThu", Storage="_NguoiDung1", ThisKey="NguoiDung", OtherKey="MaSo", IsForeignKey=true)]
		public NguoiDung NguoiDung1
		{
			get
			{
				return this._NguoiDung1.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung1.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung1.Entity = null;
						previousValue.PhieuThus.Remove(this);
					}
					this._NguoiDung1.Entity = value;
					if ((value != null))
					{
						value.PhieuThus.Add(this);
						this._NguoiDung = value.MaSo;
					}
					else
					{
						this._NguoiDung = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuVuc_PhieuThu", Storage="_KhuVuc1", ThisKey="KhuVuc", OtherKey="MaSo", IsForeignKey=true)]
		public KhuVuc KhuVuc1
		{
			get
			{
				return this._KhuVuc1.Entity;
			}
			set
			{
				KhuVuc previousValue = this._KhuVuc1.Entity;
				if (((previousValue != value) 
							|| (this._KhuVuc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuVuc1.Entity = null;
						previousValue.PhieuThus.Remove(this);
					}
					this._KhuVuc1.Entity = value;
					if ((value != null))
					{
						value.PhieuThus.Add(this);
						this._KhuVuc = value.MaSo;
					}
					else
					{
						this._KhuVuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhuVuc1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPTs(ChiTietPT entity)
		{
			this.SendPropertyChanging();
			entity.PhieuThu1 = this;
		}
		
		private void detach_ChiTietPTs(ChiTietPT entity)
		{
			this.SendPropertyChanging();
			entity.PhieuThu1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomDM")]
	public partial class NhomDM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSo;
		
		private string _Ten;
		
		private EntitySet<DanhMuc> _DanhMucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoChanging(int value);
    partial void OnMaSoChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public NhomDM()
		{
			this._DanhMucs = new EntitySet<DanhMuc>(new Action<DanhMuc>(this.attach_DanhMucs), new Action<DanhMuc>(this.detach_DanhMucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSo
		{
			get
			{
				return this._MaSo;
			}
			set
			{
				if ((this._MaSo != value))
				{
					this.OnMaSoChanging(value);
					this.SendPropertyChanging();
					this._MaSo = value;
					this.SendPropertyChanged("MaSo");
					this.OnMaSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomDM_DanhMuc", Storage="_DanhMucs", ThisKey="MaSo", OtherKey="Nhom")]
		public EntitySet<DanhMuc> DanhMucs
		{
			get
			{
				return this._DanhMucs;
			}
			set
			{
				this._DanhMucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhMucs(DanhMuc entity)
		{
			this.SendPropertyChanging();
			entity.NhomDM = this;
		}
		
		private void detach_DanhMucs(DanhMuc entity)
		{
			this.SendPropertyChanging();
			entity.NhomDM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSo;
		
		private string _HoTen;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private System.Nullable<bool> _QuanTri;
		
		private EntitySet<PhieuThu> _PhieuThus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoChanging(int value);
    partial void OnMaSoChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuanTriChanging(System.Nullable<bool> value);
    partial void OnQuanTriChanged();
    #endregion
		
		public NguoiDung()
		{
			this._PhieuThus = new EntitySet<PhieuThu>(new Action<PhieuThu>(this.attach_PhieuThus), new Action<PhieuThu>(this.detach_PhieuThus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSo
		{
			get
			{
				return this._MaSo;
			}
			set
			{
				if ((this._MaSo != value))
				{
					this.OnMaSoChanging(value);
					this.SendPropertyChanging();
					this._MaSo = value;
					this.SendPropertyChanged("MaSo");
					this.OnMaSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="NVarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanTri", DbType="Bit")]
		public System.Nullable<bool> QuanTri
		{
			get
			{
				return this._QuanTri;
			}
			set
			{
				if ((this._QuanTri != value))
				{
					this.OnQuanTriChanging(value);
					this.SendPropertyChanging();
					this._QuanTri = value;
					this.SendPropertyChanged("QuanTri");
					this.OnQuanTriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_PhieuThu", Storage="_PhieuThus", ThisKey="MaSo", OtherKey="NguoiDung")]
		public EntitySet<PhieuThu> PhieuThus
		{
			get
			{
				return this._PhieuThus;
			}
			set
			{
				this._PhieuThus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuThus(PhieuThu entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = this;
		}
		
		private void detach_PhieuThus(PhieuThu entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuVuc")]
	public partial class KhuVuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSo;
		
		private string _Ten;
		
		private System.Nullable<int> _SoBan;
		
		private EntitySet<PhieuThu> _PhieuThus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoChanging(int value);
    partial void OnMaSoChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnSoBanChanging(System.Nullable<int> value);
    partial void OnSoBanChanged();
    #endregion
		
		public KhuVuc()
		{
			this._PhieuThus = new EntitySet<PhieuThu>(new Action<PhieuThu>(this.attach_PhieuThus), new Action<PhieuThu>(this.detach_PhieuThus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSo
		{
			get
			{
				return this._MaSo;
			}
			set
			{
				if ((this._MaSo != value))
				{
					this.OnMaSoChanging(value);
					this.SendPropertyChanging();
					this._MaSo = value;
					this.SendPropertyChanged("MaSo");
					this.OnMaSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoBan", DbType="Int")]
		public System.Nullable<int> SoBan
		{
			get
			{
				return this._SoBan;
			}
			set
			{
				if ((this._SoBan != value))
				{
					this.OnSoBanChanging(value);
					this.SendPropertyChanging();
					this._SoBan = value;
					this.SendPropertyChanged("SoBan");
					this.OnSoBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuVuc_PhieuThu", Storage="_PhieuThus", ThisKey="MaSo", OtherKey="KhuVuc")]
		public EntitySet<PhieuThu> PhieuThus
		{
			get
			{
				return this._PhieuThus;
			}
			set
			{
				this._PhieuThus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuThus(PhieuThu entity)
		{
			this.SendPropertyChanging();
			entity.KhuVuc1 = this;
		}
		
		private void detach_PhieuThus(PhieuThu entity)
		{
			this.SendPropertyChanging();
			entity.KhuVuc1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
	public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSo;
		
		private System.Nullable<int> _Nhom;
		
		private string _Ten;
		
		private System.Nullable<long> _DonGia;
		
		private EntitySet<ChiTietPT> _ChiTietPTs;
		
		private EntityRef<NhomDM> _NhomDM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoChanging(int value);
    partial void OnMaSoChanged();
    partial void OnNhomChanging(System.Nullable<int> value);
    partial void OnNhomChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnDonGiaChanging(System.Nullable<long> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public DanhMuc()
		{
			this._ChiTietPTs = new EntitySet<ChiTietPT>(new Action<ChiTietPT>(this.attach_ChiTietPTs), new Action<ChiTietPT>(this.detach_ChiTietPTs));
			this._NhomDM = default(EntityRef<NhomDM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSo
		{
			get
			{
				return this._MaSo;
			}
			set
			{
				if ((this._MaSo != value))
				{
					this.OnMaSoChanging(value);
					this.SendPropertyChanging();
					this._MaSo = value;
					this.SendPropertyChanged("MaSo");
					this.OnMaSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nhom", DbType="Int")]
		public System.Nullable<int> Nhom
		{
			get
			{
				return this._Nhom;
			}
			set
			{
				if ((this._Nhom != value))
				{
					if (this._NhomDM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhomChanging(value);
					this.SendPropertyChanging();
					this._Nhom = value;
					this.SendPropertyChanged("Nhom");
					this.OnNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="BigInt")]
		public System.Nullable<long> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_ChiTietPT", Storage="_ChiTietPTs", ThisKey="MaSo", OtherKey="DanhMuc")]
		public EntitySet<ChiTietPT> ChiTietPTs
		{
			get
			{
				return this._ChiTietPTs;
			}
			set
			{
				this._ChiTietPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomDM_DanhMuc", Storage="_NhomDM", ThisKey="Nhom", OtherKey="MaSo", IsForeignKey=true, DeleteRule="SET NULL")]
		public NhomDM NhomDM
		{
			get
			{
				return this._NhomDM.Entity;
			}
			set
			{
				NhomDM previousValue = this._NhomDM.Entity;
				if (((previousValue != value) 
							|| (this._NhomDM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomDM.Entity = null;
						previousValue.DanhMucs.Remove(this);
					}
					this._NhomDM.Entity = value;
					if ((value != null))
					{
						value.DanhMucs.Add(this);
						this._Nhom = value.MaSo;
					}
					else
					{
						this._Nhom = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhomDM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPTs(ChiTietPT entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc1 = this;
		}
		
		private void detach_ChiTietPTs(ChiTietPT entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPT")]
	public partial class ChiTietPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhieuThu;
		
		private int _DanhMuc;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<DanhMuc> _DanhMuc1;
		
		private EntityRef<PhieuThu> _PhieuThu1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhieuThuChanging(int value);
    partial void OnPhieuThuChanged();
    partial void OnDanhMucChanging(int value);
    partial void OnDanhMucChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietPT()
		{
			this._DanhMuc1 = default(EntityRef<DanhMuc>);
			this._PhieuThu1 = default(EntityRef<PhieuThu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhieuThu", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PhieuThu
		{
			get
			{
				return this._PhieuThu;
			}
			set
			{
				if ((this._PhieuThu != value))
				{
					if (this._PhieuThu1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhieuThuChanging(value);
					this.SendPropertyChanging();
					this._PhieuThu = value;
					this.SendPropertyChanged("PhieuThu");
					this.OnPhieuThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanhMuc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DanhMuc
		{
			get
			{
				return this._DanhMuc;
			}
			set
			{
				if ((this._DanhMuc != value))
				{
					if (this._DanhMuc1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDanhMucChanging(value);
					this.SendPropertyChanging();
					this._DanhMuc = value;
					this.SendPropertyChanged("DanhMuc");
					this.OnDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_ChiTietPT", Storage="_DanhMuc1", ThisKey="DanhMuc", OtherKey="MaSo", IsForeignKey=true)]
		public DanhMuc DanhMuc1
		{
			get
			{
				return this._DanhMuc1.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc1.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc1.Entity = null;
						previousValue.ChiTietPTs.Remove(this);
					}
					this._DanhMuc1.Entity = value;
					if ((value != null))
					{
						value.ChiTietPTs.Add(this);
						this._DanhMuc = value.MaSo;
					}
					else
					{
						this._DanhMuc = default(int);
					}
					this.SendPropertyChanged("DanhMuc1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuThu_ChiTietPT", Storage="_PhieuThu1", ThisKey="PhieuThu", OtherKey="MaSo", IsForeignKey=true)]
		public PhieuThu PhieuThu1
		{
			get
			{
				return this._PhieuThu1.Entity;
			}
			set
			{
				PhieuThu previousValue = this._PhieuThu1.Entity;
				if (((previousValue != value) 
							|| (this._PhieuThu1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuThu1.Entity = null;
						previousValue.ChiTietPTs.Remove(this);
					}
					this._PhieuThu1.Entity = value;
					if ((value != null))
					{
						value.ChiTietPTs.Add(this);
						this._PhieuThu = value.MaSo;
					}
					else
					{
						this._PhieuThu = default(int);
					}
					this.SendPropertyChanged("PhieuThu1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
